
# README

## PayPay.py について

PayPay銀行からCSVファイルをダウンロードして処理し、整形されたExcelファイルを生成するPythonスクリプトです。  
このスクリプトは元々Excel VBAで作成されたものをPythonに移行したです。

## ファイル構成

- paypay.py　スクリプトファイル
- config_validator.py　設定ファイルの検証スクリプトファイル
- config.yaml　設定ファイル
- README.md　このファイル
- ChangeLog.md　変更履歴

## 環境セットアップ

- Python 3.1x以降
  - chardet 5.2.x
  - openpyxl 3.1x
  - pandas 2.2x
  - pyyaml 6.0.x
  - wcwidth 0.2.x
- Microsoft Excel（または互換性のあるスプレッドシートソフトウェア）

## インストール

1. 必要なPythonパッケージをインストールします。
   ```
   pip install chardet openpyxl pandas pyyaml wcwidth
   ```

2. `paypay.py`・`config_validator.py`・`config.yaml` をダウンロードし、同じフォルダに配置してください。

## 実行手順

1. スクリプトを実行します。
   ```
   python paypay.py
   ```

2. CSVファイルのダウンロードを確認するダイアログが表示されます。
  - 「はい」を選択
    - CSVファイルを選択するダイアログが開きます。

  - 「いいえ」を選択
    - 自動的に既定のウェブブラウザで銀行のウェブページを開きます。
      - ログインして、CSVファイルをダウンロードしてください。
    - 処理を再開するダイアログが表示されています。
      - ダイアログが見当たらない場合は、ウィンドウの切り替えをしてください。
    - 「ＯＫ」を選択
      - CSVファイルを選択するダイアログが開きます。

3. CSVファイルを選択するダイアログ
    - CSVファイルを選択し「開く」を選択
      - 自動的に処理が開始され、整形されたExcelファイルが生成されます。

    - 「キャンセル」を選択
      - CSVファイルが選択されなかったダイアログが表示されます。（処理終了）

4. 処理が完了すると、結果を示すダイアログが表示されます。

## 主な機能

- CSVファイルのデータの読み込みと処理
- 処理したデータのExcelファイルへの出力
- Excelワークシートの書式設定
- 取引のメモの出力

## 注意事項
- Ａ列 データの形式は yyyy/mm/dd h:mm:ss で、表示形式は yyyy/mm/dd です。
  - データの形式は、設定ファイルの date_template と date_format を同じ形式に変更してください。
  - 表示形式は、設定ファイルの Ａ列の number_format を変更してください。
- 生成されたExcelファイル paypay.xlsx はユーザーのダウンロードフォルダーに保存されます。
- ログファイル paypay.log は paypay.py と同じフォルダーに生成され保存されます。
- Microsoft Excel または互換性のあるスプレッドシートソフトウェアがインストールされている必要があります。

