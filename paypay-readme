
# README

## PayPay.py について

PayPay銀行からCSVファイルをダウンロードして処理し、整形されたExcelファイルを生成するPythonスクリプトです。  
このスクリプトは元々Excel VBAで作成されたものをPythonに移行したです。

## 必要条件

- Python 3.10以降
- pandas 2.2x
- openpyxl 3.1x
- Microsoft Excel（または互換性のあるスプレッドシートソフトウェア）

## インストール

1. 必要なPythonパッケージをインストールします。
   ```
   pip install pandas openpyxl
   ```

2. `paypay.py` と `config.yaml` をダウンロードします。

## ファイル構成

- paypay.py　スクリプトファイル
- config.yaml　設定ファイル
- README.md　このファイル
- ChangeLog.md　変更履歴

## 使用方法

1. スクリプトを実行します。
   ```
   python paypay.py
   ```

2. CSVファイルをダウンロードしてくださいのダイアログが表示されます。
  - 「ＯＫ」を選択した場合：
    - 自動的に既定のウェブブラウザでPayPay銀行のログインページを開きます。
      - ログインして、CSVファイルをダウンロードしてください。
    - 処理を開始するか確認するダイアログが表示されています。
      - ダイアログが見当たらない場合は、ウィンドウの切り替えをしてください。
      - 「はい」を選択した場合：
        - CSVファイルを選択するダイアログが開きます。
      - 「いいえ」を選択した場合：
        - スクリプトを終了します。
    
  - 「キャンセル」を選択した場合：
    - 既存のCSVファイルで処理をするか確認するダイアログが表示されます。
      - 「はい」を選択した場合：
        - CSVファイルを選択するダイアログが開きます。
      - 「いいえ」を選択した場合：
        - スクリプトを終了します。

3. CSVファイルを選択し「開く」選択すると、自動的に処理が開始され、整形されたExcelファイルが生成されます。

4. 処理が完了すると、結果を示すダイアログが表示されます。

## 主な機能

- CSVファイルのデータの読み込みと処理
- 処理したデータのExcelファイルへの出力
- Excelワークシートの書式設定
- 取引のメモの出力

## 注意事項
- Python 3.10以降が必要です。  
従来の if 文にかわり Python 3.10 で導入された match 文を使用しているため。
- 生成されたExcelファイル paypay.xlsx はユーザーのダウンロードフォルダーに保存されます。
- ログファイル paypay.log は paypay.py と同じフォルダーに生成され保存されます。
- Microsoft Excel または互換性のあるスプレッドシートソフトウェアがインストールされている必要があります。
