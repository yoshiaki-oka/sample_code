プロンプト

■開発工程の詳細
“samples”のフォルダ内にGoogleColabで新規ファイルを作成する
TERAKOYAの教材「Python基礎を学ぼう」の「2章 Pythonの開発環境を構築しよう」にて学んだ方法を使う
各店から届く注文情報をまとめる
samples/order_new　のディレクトリ内にある”order_◯_20230524.xlsx”という注文をまとめ「各野菜の合計注文数」を計算する
現在の在庫状況を確認する
samples　のディレクトリ内にある”inventory.xlsx”という在庫表の最終行の情報を抽出して「最新の野菜の在庫情報」を確認する
発注が必要なアイテムを特定する
「最新の野菜の在庫情報」ー「各野菜の合計注文数」を計算する
農家に発注するしきい値と発注数を”pickup.xlsx”から確認する
計算の結果、しきい値を下回った野菜のみを特定する
発注のためのメール文を作成する
メールの文をPythonで作成し、発注数が変数として入るようにする
変数に対して、前工程で特定した発注が必要な野菜とその発注数が入るようにする
在庫不足の商品をメーカーに発注する
メールの送信はSMTPサーバーを用いて行う
GoogleのGmailを使用してメールを送信する
※GmailのSMTPサーバーへの認証には、アプリパスワードの設定が必要
在庫状況を最新の情報に更新する
”inventory.xlsx”の最下行へ、現在の日付で最新の在庫を追加する
最新の在庫は「最新の野菜の在庫情報」ー「各野菜の合計注文数」とする
”inventory.xlsx”を上書きして保存する
これらの作業を連続して自動で行うスクリプトを作成する
作成した一連のソースコードをPythonファイルにまとめる
スクリプトの定期実行の仕組みをつくる
MacならUI. Vision RPAとカレンダーアプリを使う
WindowsならUI. Vision RPAとタスクスケジューラを使う
